'''
TO RUN THIS CODE YOU NEED A SIMFIN API KEY TO BE ABLE TO ACCESS THE DATASETS AND PERFORM THE CALCULATIONS.
THEN YOU NEED TO PUT THIS API KEY INTO THE FUNCTION 'sf.set_api_key'

THEN SPECIFY THE DOWNLOAD DIRECTORY FOR THE DATA IN 'sf.set_data_dir'
'''

import simfin as sf
from simfin.names import *
import shutil
import os
import matplotlib.pyplot as plt


# Set the local directory where data-files are stored.
sf.set_api_key('INSERT_SIMFIN_API_KEY')
sf.set_data_dir('INSERT_THE_FILE_PATH_YOU_WANT_THE_DATA_TO_BE_TEMPORARILY_STORED_TO')

snp500 = [
    'MMM',
    'AOS',
    'ABT',
    'ABBV',
    'ACN',
    # 'ABDE',
    'AMD',
    'AES',
    # 'AFL',
    'A',
    'APD',
    'ABNB',
    'AKAM',
    'ALB',
    # 'ARE',
    'ALGN',
    'ALLE',
    # 'LNT',
    # 'ALL',
    # 'GOOGL',
    'GOOG',
    'MO',
    'AMZN',
    'AMCR',
    'AEE',
    'AAL',
    'AEP',
    # 'AXP',
    # 'AIG',
    'AMT',
    'AWK',
    'AMP',
    'AME',
    'AMGN',
    'APH',
    'ADI',
    'ANSS',
    'AON',
    'APA',
    'AAPL',
    'AMAT',
    'APTV',
    # 'ACGL',
    'ADM',
    # 'ANEL',
    'AJG',
    # 'AIZ',
    'T',
    'ATO',
    'ADSK',
    'ADP',
    'AZO',
    'AVB',
    'AVY',
    'AXON',
    'BKR',
    'BALL',
    # 'BAC',
    # 'BK',
    'BBWI',
    'BAX',
    'BDX',
    'BRK-A',
    # 'BRY',
    'BIO',
    'TECH',
    'BIIB',
    'BLK',
    'BX',
    'BA',
    'BKNG',
    'BWA',
    'BXP',
    'BSX',
    'BMY',
    'AVGO',
    'BR',
    'BRO',
    'BF-A',
    'BLDR',
    'BG',
    'CDNS',
    'CZR',
    # 'CPT',
    'CPB',
    # 'COF',
    'CAH',
    'KMX',
    'CCL',
    'CARR',
    'CTLT',
    'CAT',
    'CBOE',
    'CBRE',
    'CDW',
    'CE',
    'COR',
    'CNC',
    'CNP',
    'CF',
    'CHRW',
    'CRL',
    # 'SCHW',
    # 'CHRT',
    'CVX',
    'CMG',
    # 'CB',
    'CHD',
    # 'CI',
    # 'CINF',
    'CTAS',
    'CSCO',
    # 'C',
    # 'CFG',
    'CLX',
    'CME',
    'CMS',
    'KO',
    'CTSH',
    'CL',
    'CMCSA',
    # 'CMA',
    'CAG',
    'COP',
    'ED',
    'STZ',
    'CEG',
    'COO',
    'CPRT',
    'GLW',
    # 'CPAY',
    'CTVA',
    'CSGP',
    'COST',
    'CTRA',
    'CCI',
    'CSX',
    'CMI',
    'CVS',
    'DHR',
    'DRI',
    'DVA',
    # 'DAY',
    'DECK',
    'DE',
    'DAL',
    'XRAY',
    'DVN',
    'DXCM',
    'FANG',
    'DLR',
    # 'DFS',
    'DG',
    'DLTR',
    'D',
    'DPZ',
    'DOV',
    'DOW',
    'DHI',
    'DTE',
    'DUK',
    'DD',
    'EMN',
    'ETN',
    'EBAY',
    'ECL',
    'EIX',
    'EW',
    'EA',
    # 'ELV',
    'LLY',
    'EMR',
    'ENPH',
    'ETR',
    'EOG',
    'EPAM',
    'EQT',
    'EFX',
    'EQIX',
    'EQR',
    'ESS',
    'EL',
    'ETSY',
    'EG',
    'EVRG',
    'ES',
    'EXC',
    'EXPE',
    'EXPD',
    'EXR',
    'XOM',
    'FFIV',
    'FDS',
    'FICO',
    'FAST',
    'FRT',
    'FDX',
    'FIS',
    # 'FITB',
    'FSLR',
    'FE',
    'FI',
    'FMC',
    'FTNT',
    'FTV',
    # 'FOXA',
    'FOX',
    'BEN',
    'FCX',
    'GRMN',
    'IT',
    'GEHC',
    'GEN',
    'GNRC',
    'GD',
    'GE',
    'GIS',
    'GM',
    'GPC',
    'GILD',
    'GPN',
    # 'GL',
    # 'GS',
    'HAL',
    # 'HIG',
    'HAS',
    'HCA',
    'DOC',
    # 'HSIC',
    'HSY',
    'HES',
    'HPE',
    'HLT',
    'HOLX',
    'HD',
    'HON',
    'HRL',
    'HST',
    'HWM',
    'HPQ',
    'HUBB',
    # 'HUM',
    # 'HBAN',
    'HI',
    'IBM',
    'IEX',
    'IDXX',
    'ITW',
    'ILMN',
    'INCY',
    # 'IR',
    'PODD',
    'INTC',
    'ICE',
    'IFF',
    'IP',
    'IPG',
    'INTU',
    'ISRG',
    'IVZ',
    'INVH',
    'IQV',
    'IRM',
    'JBHT',
    'JBL',
    'JKHY',
    'J',
    'JNJ',
    'JCI',
    # 'JPM',
    'JNPR',
    'K',
    'KVUE',
    'KDP',
    # 'KEY',
    'KEYS',
    'KMB',
    'KIM',
    'KMI',
    'KLAC',
    'KHC',
    'KR',
    'LHX',
    'LH',
    'LRCX',
    'LW',
    'LVS',
    # 'LDOS',
    'LEN',
    'LIN',
    'LYV',
    'LKQ',
    'LMT',
    # 'L',
    'LOW',
    'LULU',
    'LYB',
    # 'MTB',
    'MRO',
    'MPC',
    # 'MKTX',
    'MAR',
    # 'MMC',
    'MLM',
    'MAS',
    'MA',
    'MTCH',
    'MKC',
    'MCD',
    'MCK',
    'MDT',
    'MRK',
    'META',
    # 'MET',
    'MTD',
    'MGM',
    'MCHP',
    'MU',
    'MSFT',
    'MAA',
    'MRNA',
    'MHK',
    'MOH',
    'TAP',
    'MDLZ',
    # 'MPWR',
    'MNST',
    'MCO',
    # 'MS',
    'MOS',
    'MSI',
    'MSCI',
    'NDAQ',
    'NTAP',
    'NFLX',
    'NEM',
    # 'NWSA',
    'NWS',
    'NEE',
    'NKE',
    'NI',
    'NDSN',
    'NSC',
    # 'NTRS',
    'NOC',
    'NCLH',
    'NRG',
    'NUE',
    'NVDA',
    'NVR',
    'NXPI',
    'ORLY',
    # 'OXY',
    # 'ODFL',
    'OMC',
    'ON',
    'OKE',
    'ORCL',
    'OTIS',
    'PCAR',
    'PKG',
    'PANW',
    # 'PARA',
    'PH',
    'PAYX',
    'PAYC',
    'PYPL',
    'PNR',
    'PEP',
    'PFE',
    'PCG',
    'PM',
    'PSX',
    'PNW',
    'PXD',
    # 'PNC',
    'POOL',
    'PPG',
    'PPL',
    # 'PFG',
    'PG',
    # 'PGR',
    'PLD',
    # 'PRU',
    'PEG',
    'PTC',
    'PSA',
    'PHM',
    'QRVO',
    'PWR',
    'QCOM',
    'DGX',
    'RL',
    # 'RJF',
    'RTX',
    'O',
    'REG',
    'REGN',
    # 'RF',
    'RSG',
    'RMD',
    # 'RVTY',
    'RHI',
    'ROK',
    'ROL',
    'ROP',
    'ROST',
    'RCL',
    'SPGI',
    'CRM',
    'SBAC',
    'SLB',
    'STX',
    'SRE',
    'NOW',
    'SHW',
    'SPG',
    'SWKS',
    'SJM',
    'SNA',
    # 'SOLV',
    # 'SO',
    'LUV',
    'SWK',
    'SBUX',
    # 'STT',
    'STLD',
    'STE',
    'SYK',
    'SMCI',
    # 'SYF',
    'SNPS',
    'SYY',
    'TMUS',
    'TROW',
    'TTWO',
    'TPR',
    'TRGP',
    'TGT',
    'TEL',
    'TDY',
    'TFX',
    'TER',
    'TSLA',
    'TXN',
    'TXT',
    'TMO',
    'TJX',
    'TSCO',
    'TT',
    'TDG',
    # 'TRV',
    'TRMB',
    # 'TFC',
    'TYL',
    'TSN',
    # 'USB',
    'UBER',
    'UDR',
    'ULTA',
    'UNP',
    'UAL',
    'UPS',
    'URI',
    'UNH',
    'UHS',
    'VLO',
    'VTR',
    # 'VLTO',
    'VRSN',
    'VRSK',
    'VZ',
    'VRTX',
    # 'VFC',
    # 'VRTS',
    'VICI',
    'V',
    'VMC',
    # 'WRB',
    'WAB',
    'WBA',
    'WMT',
    'DIS',
    'WBD',
    'WM',
    'WAT',
    'WEC',
    # 'WFC',
    'WELL',
    'WST',
    'WDC',
    'WRK',
    'WY',
    'WMB',
    'WTW',
    'GWW',
    'WYNN',
    'XEL',
    'XYL',
    'YUM',
    'ZBRA',
    'ZBH',
    'ZTS'
]

filtered_snp500 = []
# df = sf.load_balance(variant='annual', market='us', start_date='2022-01-01', end_date='2022-12-31')
# df = sf.load(dataset='balance', variant='annual', market='us', start_date='2022-01-01', end_date='2022-12-31',
#              index=TICKER, parse_dates=REPORT_DATE)


def check_financial_ratios(stocks):
    filtered_snp500 = []

    df_us = sf.load(dataset='balance', variant='annual', market='us',
                    index=[TICKER, FISCAL_YEAR])

    df_ca = sf.load(dataset='balance', variant='annual', market='ca',
                    index=[TICKER, FISCAL_YEAR])

    df_de = sf.load(dataset='balance', variant='annual', market='de',
                    index=[TICKER, FISCAL_YEAR])


    for stock in stocks:
        try:
            total_liabilities = df_us.loc[stock, 2022]['Total Current Liabilities']
            total_assets = df_us.loc[stock, 2022]['Total Assets']
            accounts_receivable_and_cash = df_us.loc[stock, 2022]['Accounts & Notes Receivable']
            cash_and_interest_bearing_items = df_us.loc[stock, 2022]['Cash, Cash Equivalents & Short Term Investments'] \
                                              + df_us.loc[stock, 2022]['Long Term Debt']
        except KeyError:
            try:
                total_liabilities = df_ca.loc[stock, 2022]['Total Current Liabilities']
                total_assets = df_ca.loc[stock, 2022]['Total Assets']
                accounts_receivable_and_cash = df_ca.loc[stock, 2022]['Accounts & Notes Receivable']
                cash_and_interest_bearing_items = df_ca.loc[stock, 2022]['Cash, Cash Equivalents & Short Term Investments'] \
                                                  + df_ca.loc[stock, 2022]['Long Term Debt']
            except KeyError:
                try:
                    total_liabilities = df_de.loc[stock, 2022]['Total Current Liabilities']
                    total_assets = df_de.loc[stock, 2022]['Total Assets']
                    accounts_receivable_and_cash = df_de.loc[stock, 2022]['Accounts & Notes Receivable']
                    cash_and_interest_bearing_items = df_de.loc[stock, 2022][
                                                          'Cash, Cash Equivalents & Short Term Investments'] \
                                                      + df_de.loc[stock, 2022]['Long Term Debt']
                except KeyError:
                    print("No Data Found On Company")
                    continue


        if total_liabilities >= (total_assets / 3):
            continue

        if cash_and_interest_bearing_items >= (total_assets / 3):
            continue

        if accounts_receivable_and_cash >= (total_assets / 3):
            continue

        filtered_snp500.append(stock)

    if os.path.exists('temp_simfin_data_csvs'):
        shutil.rmtree('temp_simfin_data_csvs')

    return filtered_snp500
